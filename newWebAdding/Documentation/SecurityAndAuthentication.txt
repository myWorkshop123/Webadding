Security And Authorisation in node js using various modules

There are total 6 levels at which we can implement the security on our website based upon their
relieness and effectiveness

level 0:
    This is the most basic kind of security which we can add to our website.
    In this type the username and password are saved in the database in the collection and when the user enters his credentials in the login route we first check whether the user exists or not and then check the given password with the database password and if the username and password matches then we authenticate the user
    It absolutely requires not encryption and saves the userId and password in text format, If a person got access to our database , he will be able to know the id and password of the user and thus can crack all the passwords
    Thus it is the least secure method of securing the website
    
    


level 1:
    The second method of website security uses the encryption method to convert the user method into some encrypted text using a key , the problem arises as the same key is used to decrypt the password too so if the hacker got access to the key then he will use the key to decrypt all the encrypted passwords.
    
    Steps to implement the level 1 security are give in the second log of the Secrets project
    
        1. Require the module
            npm install mongoose-encryption
    
        2. Make the secret key
            this is the secret key which is used to encrypt as well as decrypt the password this is a string and it can be anything depending upon the user
        
        3. Add the encryption module as a plugin in the useSchema
           
            userSchema.plugin(encrypt, { secret: secret, encryptedFields: ["password"] });


